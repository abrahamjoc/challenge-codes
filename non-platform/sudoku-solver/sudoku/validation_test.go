package sudoku

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func Test_isBoardValid(t *testing.T) {
	assert := assert.New(t)
	boardTrue := [][]int{
		{2, 4, 1, 6, 8, 5, 3, 9, 7},
		{3, 8, 9, 7, 4, 1, 2, 6, 5},
		{6, 7, 5, 2, 3, 9, 4, 8, 1},
		{7, 1, 6, 3, 2, 4, 9, 5, 8},
		{5, 3, 4, 8, 9, 7, 1, 2, 6},
		{8, 9, 2, 1, 5, 6, 7, 3, 4},
		{4, 2, 7, 5, 6, 3, 8, 1, 9},
		{9, 6, 8, 4, 1, 2, 5, 7, 3},
		{1, 5, 3, 9, 7, 8, 6, 4, 2},
	}
	boardFalse := [][]int{
		{2, 4, 1, 6, 8, 5, 3, 9, 7},
		{3, 8, 9, 7, 4, 1, 2, 6, 5},
		{6, 7, 5, 2, 3, 9, 4, 8, 1},
		{7, 1, 6, 3, 2, 4, 9, 5, 8},
		{5, 3, 4, 8, 9, 7, 1, 2, 6},
		{8, 9, 2, 1, 9, 6, 7, 3, 4},
		{4, 2, 7, 5, 6, 3, 8, 1, 9},
		{9, 6, 8, 4, 1, 2, 5, 7, 3},
		{1, 5, 3, 9, 7, 8, 6, 4, 2},
	}

	ok := isBoardValid(boardTrue)
	nok := isBoardValid(boardFalse)

	assert.True(ok)
	assert.False(nok)
}

func Test_isZeroBoardValid(t *testing.T) {
	assert := assert.New(t)
	boardTrue := [][]int{
		{0, 4, 1, 6, 8, 5, 3, 9, 7},
		{3, 8, 9, 7, 4, 1, 2, 6, 5},
		{6, 7, 5, 2, 3, 9, 4, 8, 1},
		{0, 1, 6, 3, 2, 4, 9, 5, 8},
		{5, 3, 4, 0, 9, 7, 1, 2, 6},
		{8, 9, 2, 1, 5, 6, 7, 3, 4},
		{4, 2, 7, 5, 6, 0, 8, 1, 9},
		{9, 6, 8, 4, 1, 2, 5, 7, 3},
		{1, 5, 3, 9, 7, 8, 6, 4, 2},
	}
	boardFalse := [][]int{
		{0, 4, 1, 6, 8, 5, 3, 9, 7},
		{3, 3, 9, 7, 4, 1, 2, 6, 5},
		{6, 7, 5, 2, 3, 9, 4, 8, 1},
		{0, 1, 6, 3, 2, 4, 9, 5, 8},
		{5, 3, 4, 0, 9, 7, 1, 2, 6},
		{8, 9, 2, 1, 5, 6, 7, 3, 4},
		{4, 2, 7, 5, 6, 0, 8, 1, 9},
		{9, 6, 8, 4, 1, 2, 5, 7, 3},
		{1, 5, 3, 9, 7, 8, 6, 4, 2},
	}

	ok := isBoardValid(boardTrue)
	nok := isBoardValid(boardFalse)

	assert.True(ok)
	assert.False(nok)
}

func Test_nok(t *testing.T) {
	assert := assert.New(t)
	board := [][]int{
		{9, 7, 8, 4, 6, 1, 5, 2, 3},
		{8, 5, 7, 6, 3, 4, 0, 0, 9},
		{0, 6, 0, 0, 0, 0, 4, 0, 0},
		{0, 0, 0, 0, 0, 7, 0, 0, 4},
		{4, 0, 2, 0, 0, 0, 0, 0, 1},
		{0, 0, 0, 0, 0, 0, 0, 8, 0},
		{0, 8, 0, 0, 0, 0, 0, 0, 2},
		{0, 0, 9, 0, 8, 3, 1, 4, 6},
		{0, 0, 0, 7, 2, 9, 3, 0, 0},
	}

	nok := isBoardValid(board)

	assert.False(nok)
}
